.PHONY: help build up down logs clean

# Default target
help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  build    - –°–æ–±—Ä–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  up       - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
	@echo "  down     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
	@echo "  logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
	@echo "  clean    - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã"
	@echo "  clean-bin - –û—á–∏—Å—Ç–∏—Ç—å –±–∏–Ω–∞—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo "  dev      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  prod     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ"
	@echo "  config   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
	@echo "  check    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å"

# Build all containers
build:
	docker-compose build

# Start the application
up:
	docker-compose up -d

# Stop the application
down:
	docker-compose down

# Show logs
logs:
	docker-compose logs -f

# Clean everything
clean:
	docker-compose down -v --rmi all
	docker system prune -f

# Clean binaries
clean-bin:
	@echo "–û—á–∏—Å—Ç–∫–∞ –±–∏–Ω–∞—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	@find . -name "main" -type f -delete 2>/dev/null || true
	@find . -name "app" -type f -delete 2>/dev/null || true
	@find . -name "server" -type f -delete 2>/dev/null || true
	@find . -name "driver_bot" -type f -delete 2>/dev/null || true
	@find . -name "admin_bot" -type f -delete 2>/dev/null || true
	@find . -name "*.exe" -type f -delete 2>/dev/null || true
	@find . -name "*.test" -type f -delete 2>/dev/null || true
	@find . -name "*.out" -type f -delete 2>/dev/null || true
	@echo "‚úÖ –ë–∏–Ω–∞—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"

# Development mode (with volume mounts for hot reload)
dev:
	docker-compose -f docker-compose.dev.yml up

# Production mode
prod:
	docker-compose -f docker-compose.prod.yml up -d

# Quick start (build and run)
start: config build up
	@echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
	@echo "Frontend: http://localhost"
	@echo "Backend API: http://localhost:8080"
	@echo "Database: localhost:5432"

# Check status
status:
	docker-compose ps

# Restart services
restart:
	docker-compose restart

# Update and restart
update: down build up
	@echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ!"

# Check configuration
config:
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
	@if [ ! -f ".env" ]; then \
		echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ env.example –≤ .env"; \
		exit 1; \
	fi
	@if [ ! -f "config.yaml" ]; then \
		echo "‚ùå –§–∞–π–ª config.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω"; \
		exit 1; \
	fi
	@echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤ –ø–æ—Ä—è–¥–∫–µ"
	@echo "üìù config.yaml - –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
	@echo "üîê .env - —Ç–æ–∫–µ–Ω—ã –±–æ—Ç–æ–≤"

# Check application health
check:
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	@if [ -f "scripts/check.sh" ]; then \
		./scripts/check.sh; \
	else \
		echo "‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"; \
		exit 1; \
	fi
